{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/profit/profit.component.css","webpack:///./src/app/profit/profit.component.html","webpack:///./src/app/profit/profit.component.ts","webpack:///./src/app/profit/profit.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"@import url('https://fonts.googleapis.com/css?family=Roboto:400,500');\"","module.exports = \"<div>\\n  <app-profit></app-profit>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'teste-angular';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { CommonModule } from '@angular/common';\n\nimport { AppComponent } from './app.component';\nimport { ProfitComponent } from './profit/profit.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ProfitComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    CommonModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"table {\\n    font-family: arial, sans-serif;\\n    border-collapse: collapse;\\n    width: 100%;\\n}\\n\\ntd, th {\\n    border: 1px solid #dddddd;\\n    text-align: left;\\n    padding: 8px;\\n}\\n\\ntr:nth-child(even) {\\n    background-color: #dddddd;\\n}\\n\\n.rectangle-5 {\\n    background-color: rgba(0, 0, 0, 0.05000000074505806);\\n    border-radius: 24px;\\n    width: 336px;\\n    height: 31px;\\n}\"","module.exports = \"<div class=\\\"search\\\">\\n  <input type=\\\"text\\\" class=\\\"rectangle-5\\\" placeholder=\\\"Digite qualquer coisa da tabela\\\" (keyup)=\\\"filter = $event.target.value\\\">\\n</div>\\n<br/>\\n<hr>\\n<div>\\n  <table>\\n    <tr>\\n      <th>Data</th>\\n      <th>Moeda</th>\\n      <th>Rendimento</th>\\n      <th>%</th>\\n      <th>Saldo</th>\\n    </tr>\\n    <tr *ngFor=\\\"let item of profits | filterByDescription: filter\\\"> \\n      <td>{{item.dateMoviment}}</td>\\n      <td>{{item.coin}}</td>\\n      <td>{{item.proft}}</td>\\n      <td>{{item.profitPercentage}}</td>\\n      <td>{{item.balance}}</td>\\n    </tr>\\n  </table>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ProfitService } from './profit.service';\n\n@Component({\n  selector: 'app-profit',\n  templateUrl: './profit.component.html',\n  styleUrls: ['./profit.component.css']\n})\nexport class ProfitComponent implements OnInit {\n\n  profits: any[] = []; \n  datasFiltered: any[] = [];\n  filter: string;\n\n  constructor(private ProfitService: ProfitService) { }\n\n  ngOnInit(): void {\n    this.getProfits();\n  }\n  \n  getProfits(){\n    this.ProfitService\n    .listFromProfits()\n    .subscribe(result => {\n      this.profits = result.sort();\n      \n      this.profits[0].balance = this.profits[0].proft;\n      for (let index = 1; index < this.profits.length; index++) {\n          this.profits[index].balance = (parseFloat(this.profits[index -1].proft) + parseFloat(this.profits[index].proft));\n      }\n      // this.datasFiltered = this.profits\n    });\n  }\n\n  filterDatas(value) {\n    if(event === undefined || value.length ===0 ) {\n      // this.datasFiltered = this.profits;\n      this.filter = '';\n      return;\n    }\n    this.filter = value;\n    // var filter = event.target.value;\n    // this.datasFiltered = this.profits.filter( \n    //   data => data.dateMoviment.includes(filter)\n    //   ||data.proft.includes(filter) \n    //   ||(parseFloat(data.profitPercentage).toFixed(4)).includes(filter)\n    //   ||(parseFloat(data.balance).toFixed(4)).includes(filter)\n    // );\n  }\n}\n\n","import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\n\nimport { Profit } from \"./profit\";\n\nconst API = 'http://www.mocky.io/v2/5b2c010d300000100023487a';\n\n@Injectable({ providedIn: 'root' })\nexport class ProfitService {\n\n    constructor(private http: HttpClient) {}\n\n    listFromProfits() {\n        return this.http\n            .get<Profit[]>(API);       \n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}